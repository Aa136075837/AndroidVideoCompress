apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

androidExtensions {
    experimental = true
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mac.androidvideocompress"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "x86"
            abiFilters "armeabi"
        }
    }

    signingConfigs {
//            debug {
//                storeFile file(project.getRootDir().toString() + File.separator + "files" + File.separator + "OA.jks")
//                storePassword project.SIGNINGCONFIGS_STORE_PASSWORD
//                keyAlias project.SIGNINGCONFIGS_KEY_ALIAS
//                keyPassword project.SIGNINGCONFIGS_KEY_PASSWORD
//            }
        release {
            storeFile file(project.getRootDir().toString() + File.separator + "files" + File.separator + "mac.jks")
            storePassword project.SIGNINGCONFIGS_STORE_PASSWORD
            keyAlias project.SIGNINGCONFIGS_KEY_ALIAS
            keyPassword project.SIGNINGCONFIGS_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

//android.applicationVariants.all { variant ->
//
//    variant.outputs.all {
//        def appName = variant.getApplicationId()
//        def sarry = appName.split("\\.")
//
//        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/app/build/outputs/apk")
//
//        outputFileName = "${sarry.last()}-${variant.buildType.name}-V${variant.versionName.replaceAll("\\.", "")}(${variant.versionCode})_${releaseTime()}.apk";
//
//    }
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':compressjava')
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation rootProject.ext.dependenciesName["photoView"]
    implementation rootProject.ext.dependenciesName["dagger"]
    annotationProcessor rootProject.ext.dependenciesName["dagger_compiler"]
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    api project(':macdocument')
    implementation project(':transitionanim')
    implementation project(':mutiimage')
    implementation project(':maccommon-java')
    implementation project(':facerecognition')
}

//dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
//    implementation 'androidx.appcompat:appcompat:1.0.0'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
//    implementation project(':compressjava')
//    implementation('com.github.bumptech.glide:glide:4.8.0')
////            {
////        exclude module: 'support-compat'
////    }
//    annotationProcessor ('com.github.bumptech.glide:compiler:4.8.0')
////            {
////        exclude module: 'support-compat'
////    }
//
//
//    implementation rootProject.ext.dependenciesName["photoView"]
//}

